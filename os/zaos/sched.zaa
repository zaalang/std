//
// sched
//

pub struct arg
{
  pub u8 *beg;
  pub u8 *end;

  pub arg(u8 *beg, u8 *end)
    : beg(beg), end(end)
  {
  }

  pub arg(u8 *data, usize len)
    : beg(data), end(data + len)
  {
  }

  pub arg(typeof("") &str)
    : beg(str.data), end(str.data + str.len)
  {
  }

  pub arg() = default;
  pub arg(arg&) = default;
  pub fn =(arg mut &, arg &) -> arg mut & = default;
  pub ~arg() = default;
}

pub struct attr
{
  pub const stdin = 0;
  pub const stdout = 1;
  pub const stderr = 2;
  pub const stdroot = 4;
  pub const stdcwd = 5;
  pub const fn dupfd(i32 fd) -> i32 { return fd; }
  pub const enddup = 255;

  pub i32 type;
  pub uintptr value;

  pub attr(i32 type, var value)
    : type(type), value(cast<uintptr>(value))
  {
  }

  pub attr() = default;
  pub attr(attr&) = default;
  pub fn =(attr mut &, attr &) -> attr mut & = default;
  pub ~attr() = default;
}

pub enum priority
{
  pub const lowest = 1;
  pub const low = 5;
  pub const normal = 10;
  pub const display = 15;
  pub const high = 20;
  pub const max = 50;
}

pub const WNOHANG = 0x1;
pub const WNOWAIT = 0x2;

#[weak]
extern fn __vdso_process_create(arg *argv, usize argc, arg *envp, usize envc, attr *attrs, usize n, u64 flags) -> i32;

#[weak]
extern fn __vdso_thread_create(void mut *stack, fn (*start_routine)() -> void, void mut *start_argument, i32 priority, i32 mut *tid, u64 flags) -> i32;

#[weak]
extern fn __vdso_wait(i32 id, i32 mut *rvalbuf, u64 flags) -> i32;

#[weak]
extern fn __vdso_futex_wait(u32 *addr, u32 expected, u64 abstime) -> i32;

#[weak]
extern fn __vdso_futex_wake(u32 *addr, u32 count) -> i32;

#[weak]
extern fn __vdso_process_kill(i32 pid) -> i32;

#[weak]
extern fn __vdso_thread_munmap_exit(void *addr, usize length) -> i32;

#[weak]
extern fn __vdso_thread_exit(i32 rval) -> void;

#[weak]
extern fn __vdso_process_exit(i32 rval) -> void;

pub fn process_create(arg *argv, usize argc, arg *envp, usize envc, attr *attrs, usize n, u64 flags) -> i32
{
  return __vdso_process_create(argv, argc, envp, envc, attrs, n, flags);
}

pub fn thread_create(void mut *stack, fn (*start_routine)() -> void, void mut *start_argument, i32 priority, i32 mut *tid, u64 flags) -> i32
{
  return __vdso_thread_create(stack, start_routine, start_argument, priority, tid, flags);
}

pub fn wait(i32 id, i32 mut *rvalbuf, u64 flags) -> i32
{
  return __vdso_wait(id, rvalbuf, flags);
}

pub fn futex_wait(u32 *addr, u32 expected, u64 abstime) -> i32
{
  return __vdso_futex_wait(addr, expected, abstime);
}

pub fn futex_wake(u32 *addr, u32 count) -> i32
{
  return __vdso_futex_wake(addr, count);
}

pub fn process_kill(i32 pid) -> i32
{
  return __vdso_process_kill(pid);
}

pub fn thread_munmap_exit(void *addr, usize length) -> i32
{
  return __vdso_thread_munmap_exit(addr, length);
}

#[noreturn]
pub fn thread_exit(i32 rval) -> void
{
  return __vdso_thread_exit(rval);
}

#[noreturn]
pub fn process_exit(i32 rval) -> void
{
  return __vdso_process_exit(rval);
}
