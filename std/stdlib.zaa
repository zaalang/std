//
// std stdlib
//

import std.stdio;
import std.error;
import std.string : String;

#if (__cfg("zaa.build.checked"))
  const checked_assert = true;
#else
  const checked_assert = false;
#end

#[noreturn]
pub extern fn exit(i32) -> void;

pub fn move<T>(T mut &v) -> T&&
{
  return &v;
}

#[noreturn]
pub fn abort(var & ...args) -> void
{
  if (args.len != 0)
    std::print(&&args...);

  exit(1);
}

#[noreturn]
pub fn panic(var & ...args) -> void
{
  if (args.len != 0)
    std::print(&&args...);

  exit(1);
}

#[conditional(checked_assert)]
pub fn assert(var *condition, String &msg = "", var &loc = std::source_location(__site__)) -> void
{
  assert(condition != null, msg, loc: loc);
}

#[conditional(checked_assert)]
pub fn assert(bool condition, String &msg = "", var &loc = std::source_location(__site__)) -> void
{
  if (!condition)
  {
    panic(loc, ": assertion: ", msg);
  }
}

pub fn assert(#bool condition, #std::string_literal msg = "", #var loc = #std::source_location(__site__)) -> void
{
  #if (!condition)
  {
    #panic(loc, ": assertion: ", msg);
  }
}
